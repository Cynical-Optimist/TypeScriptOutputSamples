// Generated by morphir-elm

import * as codecs from "./../../morphir/internal/Codecs"
import { Morphir_IR_Package } from "./../../morphir/ir/Package"
import { Morphir_IR_Type } from "./../../morphir/ir/Type"

export namespace Morphir_IR_Distribution {
  /* Type that represents a package distribution. Currently the only distribution type we provide is a `Library`.
  */
  export type Distribution = Library
  
  export function decodeDistribution(varDecoders, input) {
  let decoderMap = new Map();
  decoderMap.set("Library", decodeLibrary.bind(varDecoders));
  codecs.decodeCustomType(decoderMap, input);
  }
  
  
  
  export interface Library {
    kind: "Library";
    arg1: Morphir_IR_Package.PackageName;
    arg2: Array<[Morphir_IR_Package.PackageName, Morphir_IR_Package.Specification<[]>]>;
    arg3: Morphir_IR_Package.Definition<[], Morphir_IR_Type.Type<[]>>;
  }
  
  export function decodeLibrary(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Library", ["Arg1", "Arg2", "Arg3"], [Morphir_IR_Package.decodePackageName.bind(null, varDecoders), codecs.decodeDict.bind(null, Morphir_IR_Package.decodePackageName.bind(null, varDecoders), Morphir_IR_Package.decodeSpecification.bind(null, varDecoders)), Morphir_IR_Package.decodeDefinition.bind(null, varDecoders)], input);
  }
  
}

