// Generated by morphir-elm

import * as codecs from "./../../../../morphir/internal/Codecs"
import { Morphir_Reference_Model_Issues_PatternModel_BasicEnum } from "./../../../../morphir/reference/model/issues/patternmodel/BasicEnum"
import { Morphir_Reference_Model_Issues_PatternModel_OtherBasicEnum } from "./../../../../morphir/reference/model/issues/patternmodel/OtherBasicEnum"

export namespace Morphir_Reference_Model_Issues_Issue409 {
  
  export type BasicRule = {
    basicEnum: Morphir_Reference_Model_Issues_PatternModel_BasicEnum.BasicEnum;
    otherBasicEnum: Morphir_Reference_Model_Issues_PatternModel_OtherBasicEnum.OtherBasicEnum;
    id: string;
  }
  
  export function decodeBasicRule(varDecoders, input) {
  return codecs.decodeRecord(new Map([["basicEnum", Morphir_Reference_Model_Issues_PatternModel_BasicEnum.decodeBasicEnum.bind(null, varDecoders)], ["otherBasicEnum", Morphir_Reference_Model_Issues_PatternModel_OtherBasicEnum.decodeOtherBasicEnum.bind(null, varDecoders)], ["id", codecs.decodeString.bind(null)]]), input);
  }
  
  export function encodeBasicRule(varEncoders, value) {
  return codecs.encodeRecord(new Map([["basicEnum", codecs.encodeUnit.bind(null)], ["otherBasicEnum", codecs.encodeUnit.bind(null)], ["id", codecs.encodeString.bind(null)]]), value);
  }
  
}

