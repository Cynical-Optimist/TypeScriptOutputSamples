// Generated by morphir-elm

import * as codecs from "./../../../../morphir/internal/Codecs"

export namespace Morphir_Reference_Model_Issues_Issue333 {
  
  export type LocalDate = Invalid | Valid
  
  
  
  
  
  export interface Invalid {
    kind: "Invalid";
    arg1: Morphir_Reference_Model_Issues_Issue333.RawLocalDate;
  }
  
  export interface Valid {
    kind: "Valid";
    arg1: Morphir_Reference_Model_Issues_Issue333.ValidLocalDate;
  }
  
  
  export type Month = April | August | December | February | January | July | June | March | May | November | October | September
  
  
  
  
  
  export interface April {
    kind: "April";
  }
  
  export interface August {
    kind: "August";
  }
  
  export interface December {
    kind: "December";
  }
  
  export interface February {
    kind: "February";
  }
  
  export interface January {
    kind: "January";
  }
  
  export interface July {
    kind: "July";
  }
  
  export interface June {
    kind: "June";
  }
  
  export interface March {
    kind: "March";
  }
  
  export interface May {
    kind: "May";
  }
  
  export interface November {
    kind: "November";
  }
  
  export interface October {
    kind: "October";
  }
  
  export interface September {
    kind: "September";
  }
  
  
  export type MonthParseError = InvalidMonth
  
  
  
  
  
  export interface InvalidMonth {
    kind: "InvalidMonth";
    arg1: number;
  }
  
  
  export type RawLocalDate = {
    year: number;
    month: number;
    day: number;
  }
  
  export function decodeRawLocalDate(varDecoders, input) {
  return codecs.decodeRecord(new Map([["year", codecs.decodeInt.bind(null)], ["month", codecs.decodeInt.bind(null)], ["day", codecs.decodeInt.bind(null)]]), input);
  }
  
  export function encodeRawLocalDate(varEncoders, value) {
  return codecs.encodeRecord(new Map([["year", codecs.encodeInt.bind(null)], ["month", codecs.encodeInt.bind(null)], ["day", codecs.encodeInt.bind(null)]]), value);
  }
  
  
  export type ValidLocalDate = {
    year: number;
    month: Morphir_Reference_Model_Issues_Issue333.Month;
    day: number;
  }
  
  export function decodeValidLocalDate(varDecoders, input) {
  return codecs.decodeRecord(new Map([["year", codecs.decodeInt.bind(null)], ["month", codecs.decodeUnit.bind(null)], ["day", codecs.decodeInt.bind(null)]]), input);
  }
  
  export function encodeValidLocalDate(varEncoders, value) {
  return codecs.encodeRecord(new Map([["year", codecs.encodeInt.bind(null)], ["month", codecs.encodeUnit.bind(null)], ["day", codecs.encodeInt.bind(null)]]), value);
  }
  
}

