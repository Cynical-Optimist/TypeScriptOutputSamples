// Generated by morphir-elm

import * as codecs from "./../../../../../morphir/internal/Codecs"

export namespace Morphir_Reference_Model_Issues_PatternModel_BasicEnum {
  
  export type BasicEnum = Five | Four | None | One | Six | Three | Two
  
  export function decodeBasicEnum(varDecoders, input) {
  let decoderMap = new Map();
  decoderMap.set("Five", decodeFive.bind(varDecoders));
  decoderMap.set("Four", decodeFour.bind(varDecoders));
  decoderMap.set("None", decodeNone.bind(varDecoders));
  decoderMap.set("One", decodeOne.bind(varDecoders));
  decoderMap.set("Six", decodeSix.bind(varDecoders));
  decoderMap.set("Three", decodeThree.bind(varDecoders));
  decoderMap.set("Two", decodeTwo.bind(varDecoders));
  codecs.decodeCustomType(decoderMap, input);
  }
  
  
  
  export interface Five {
    kind: "Five";
  }
  
  export function decodeFive(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Five", [], [], input);
  }
  
  export interface Four {
    kind: "Four";
  }
  
  export function decodeFour(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Four", [], [], input);
  }
  
  export interface None {
    kind: "None";
  }
  
  export function decodeNone(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("None", [], [], input);
  }
  
  export interface One {
    kind: "One";
  }
  
  export function decodeOne(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("One", [], [], input);
  }
  
  export interface Six {
    kind: "Six";
  }
  
  export function decodeSix(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Six", [], [], input);
  }
  
  export interface Three {
    kind: "Three";
  }
  
  export function decodeThree(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Three", [], [], input);
  }
  
  export interface Two {
    kind: "Two";
  }
  
  export function decodeTwo(varDecoders, input) {
  return codecs.decodeCustomTypeVariant("Two", [], [], input);
  }
  
}

